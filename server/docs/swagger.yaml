definitions:
  config.AliyunOSS:
    properties:
      access-key-id:
        type: string
      access-key-secret:
        type: string
      base-path:
        type: string
      bucket-name:
        type: string
      bucket-url:
        type: string
      endpoint:
        type: string
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      server-api:
        type: string
      server-initialize:
        type: string
      server-model:
        type: string
      server-plug:
        type: string
      server-request:
        type: string
      server-router:
        type: string
      server-service:
        type: string
      transfer-restart:
        type: boolean
      web:
        type: string
      web-api:
        type: string
      web-form:
        type: string
      web-table:
        type: string
    type: object
  config.AwsS3:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      disable-ssl:
        type: boolean
      endpoint:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      s3-force-path-style:
        type: boolean
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.Captcha:
    properties:
      img-height:
        description: Verification code height
        type: integer
      img-width:
        description: verification code width
        type: integer
      key-long:
        description: Verification code length
        type: integer
      open-captcha:
        description: This is the number when explosion-proof verification code is turned on. 0 means that a verification code is required every time you log in. Other numbers represent the number of wrong passwords. For example, 3 means that a verification code will appear after three errors.
        type: integer
      open-captcha-timeout:
        description: Explosion-proof verification code timeout, unit: s (seconds)
        type: integer
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.HuaWeiObs:
    properties:
      access-key:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      path:
        type: string
      secret-key:
        type: string
    type: object
  config.JWT:
    properties:
      buffer-time:
        description: buffer time
        type: string
      expires-time:
        description: Expiration time
        type: string
      issuer:
        description: issuer
        type: string
      signing-key:
        description: jwt signature
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: local file access path
        type: string
      store-path:
        description: local file storage path
        type: string
    type: object
  config.Mongo:
    properties:
      coll:
        description: collection name
        type: string
      connect-timeout-ms:
        description: connection timeout
        type: integer
      database:
        description: database name
        type: string
      hosts:
        description: host list
        items:
          $ref: '#/definitions/config.MongoHost'
        type: array
      is-zap:
        description: Whether to enable zap log
        type: boolean
      max-pool-size:
        description: Maximum connection pool
        type: integer
      min-pool-size:
        description: Minimum connection pool
        type: integer
      options:
        description: mongodb options
        type: string
      password:
        description: password
        type: string
      socket-timeout-ms:
        description: socket timeout
        type: integer
      username:
        description: username
        type: string
    type: object
  config.MongoHost:
    properties:
      host:
        description: ip address
        type: string
      port:
        description: port
        type: string
    type: object
  config.Mssql:
    properties:
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      username:
        description: database password
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      username:
        description: database password
        type: string
    type: object
  config.Oracle:
    properties:
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      username:
        description: database password
        type: string
    type: object
  config.Pgsql:
    properties:
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      username:
        description: database password
        type: string
    type: object
  config.Qiniu:
    properties:
      access-key:
        description: secret key AK
        type: string
      bucket:
        description: space name
        type: string
      img-path:
        description: CDN accelerated domain name
        type: string
      secret-key:
        description: secret key SK
        type: string
      use-cdn-domains:
        description: Whether to use CDN upload acceleration for uploading
        type: boolean
      use-https:
        description: Whether to use https
        type: boolean
      zone:
        description: storage area
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: server address:port
        type: string
      db:
        description: Which database of redis
        type: integer
      password:
        description: password
        type: string
    type: object
  config.Server:
    properties:
      aliyun-oss:
        $ref: '#/definitions/config.AliyunOSS'
      autocode:
        allOf:
        - $ref: '#/definitions/config.Autocode'
        description: auto
      aws-s3:
        $ref: '#/definitions/config.AwsS3'
      captcha:
        $ref: '#/definitions/config.Captcha'
      cors:
        allOf:
        - $ref: '#/definitions/config.CORS'
        description: Cross-domain configuration
      db-list:
        items:
          $ref: '#/definitions/config.SpecializedDB'
        type: array
      email:
        $ref: '#/definitions/github_com_flipped-aurora_gin-vue-admin_server_config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      hua-wei-obs:
        $ref: '#/definitions/config.HuaWeiObs'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        allOf:
        - $ref: '#/definitions/config.Local'
        description: oss
      mongo:
        $ref: '#/definitions/config.Mongo'
      mssql:
        $ref: '#/definitions/config.Mssql'
      mysql:
        allOf:
        - $ref: '#/definitions/config.Mysql'
        description: gorm
      oracle:
        $ref: '#/definitions/config.Oracle'
      pgsql:
        $ref: '#/definitions/config.Pgsql'
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      sqlite:
        $ref: '#/definitions/config.Sqlite'
      system:
        $ref: '#/definitions/config.System'
      tencent-cos:
        $ref: '#/definitions/config.TencentCOS'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.SpecializedDB:
    properties:
      alias-name:
        type: string
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      disable:
        type: boolean
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      type:
        type: string
      username:
        description: database password
        type: string
    type: object
  config.Sqlite:
    properties:
      config:
        description: Advanced configuration
        type: string
      db-name:
        description: database name
        type: string
      engine:
        default: InnoDB
        description: Database engine, default InnoDB
        type: string
      log-mode:
        description: Whether to enable Gorm global logs
        type: string
      log-zap:
        description: Whether to write log files through zap
        type: boolean
      max-idle-conns:
        description: Maximum number of idle connections
        type: integer
      max-open-conns:
        description: Maximum number of connections opened to the database
        type: integer
      password:
        description: database password
        type: string
      path:
        type: string
      port:
        type: string
      prefix:
        type: string
      singular:
        description: Whether to enable global disabling of pluralization, true means enabled
        type: boolean
      username:
        description: database password
        type: string
    type: object
  config.System:
    properties:
      addr:
        description: port value
        type: integer
      db-type:
        description: Database type: mysql (default)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: environment value
        type: string
      iplimit-count:
        type: integer
      iplimit-time:
        type: integer
      oss-type:
        description: Oss type
        type: string
      router-prefix:
        type: string
      use-mongo:
        description: using redis
        type: boolean
      use-multipoint:
        description: Multi-point login interception
        type: boolean
      use-redis:
        description: using redis
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.Zap:
    properties:
      director:
        description: log folder
        type: string
      encode-level:
        description: encoding level
        type: string
      format:
        description: output
        type: string
      level:
        description: level
        type: string
      log-in-console:
        description: Output console
        type: boolean
      max-age:
        description: Log retention time
        type: integer
      prefix:
        description: log prefix
        type: string
      show-line:
        description: display row
        type: boolean
      stacktrace-key:
        description: stack name
        type: string
    type: object
  example.ExaCustomer:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      customerName:
        description: customer name
        type: string
      customerPhoneData:
        description: Customer mobile phone number
        type: string
      sysUser:
        allOf:
        - $ref: '#/definitions/system.SysUser'
        description: Management details
      sysUserAuthorityID:
        description: Management role ID
        type: integer
      sysUserId:
        description: Management ID
        type: integer
      updatedAt:
        description: update time
        type: string
    type: object
  example.ExaFile:
    properties:
      ID:
        description: primary key ID
        type: integer
      chunkTotal:
        type: integer
      createdAt:
        description: creation time
        type: string
      exaFileChunk:
        items:
          $ref: '#/definitions/example.ExaFileChunk'
        type: array
      fileMd5:
        type: string
      fileName:
        type: string
      filePath:
        type: string
      isFinish:
        type: boolean
      updatedAt:
        description: update time
        type: string
    type: object
  example.ExaFileChunk:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      exaFileID:
        type: integer
      fileChunkNumber:
        type: integer
      fileChunkPath:
        type: string
      updatedAt:
        description: update time
        type: string
    type: object
  example.ExaFileUploadAndDownload:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      key:
        description: number
        type: string
      name:
        description: file name
        type: string
      tag:
        description: file label
        type: string
      updatedAt:
        description: update time
        type: string
      url:
        description: file address
        type: string
    type: object
  github_com_flipped-aurora_gin-vue-admin_server_config.Email:
    properties:
      from:
        description: Sender: the email address you want to send the email to
        type: string
      host:
        description: server address, for example, smtp.qq.com. Please go to QQ or the email address you want to send the email to check its SMTP protocol.
        type: string
      is-ssl:
        description: Whether to SSL or not. Whether to enable SSL.
        type: boolean
      nickname:
        description: Nickname: Nickname of the sender, usually his/her email address
        type: string
      port:
        description: Port Please go to QQ or the email address you want to send the email to check its SMTP protocol. Most of them are 465.
        type: integer
      secret:
        description: Key The key used for login. It is best not to use the email password. Go to the email SMTP to apply for a key used for login.
        type: string
      to:
        description: Recipients: Multiple separated by English commas. Example: a@qq.com b@qq.com Please use this item as a parameter during official development.
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: role ID
        type: integer
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: permission id
        type: integer
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: method
        type: string
      path:
        description: path
        type: string
    type: object
  request.ChangePasswordReq:
    properties:
      newPassword:
        description: new password
        type: string
      password:
        description: password
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: role ID
        type: integer
    type: object
  request.GetById:
    properties:
      id:
        description: primary key ID
        type: integer
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: database name
        type: string
      dbPath:
        description: sqlite database file path
        type: string
      dbType:
        description: database type
        type: string
      host:
        description: server address
        type: string
      password:
        description: database password
        type: string
      port:
        description: Database connection port
        type: string
      userName:
        description: database username
        type: string
    required:
    - dbName
    type: object
  request.Login:
    properties:
      captcha:
        description: verification code
        type: string
      captchaId:
        description: Verification code ID
        type: string
      password:
        description: password
        type: string
      username:
        description: username
        type: string
    type: object
  request.PageInfo:
    properties:
      keyword:
        description: keyword
        type: string
      page:
        description: page number
        type: integer
      pageSize:
        description: size per page
        type: integer
    type: object
  request.Register:
    properties:
      authorityId:
        example: int role id
        type: string
      authorityIds:
        example: '[]uint role id'
        type: string
      email:
        example: email
        type: string
      enable:
        example: int Is it enabled?
        type: string
      headerImg:
        example: avatar link
        type: string
      nickName:
        example: nickname
        type: string
      passWord:
        example: password
        type: string
      phone:
        example: phone number
        type: string
      userName:
        example: username
        type: string
    type: object
  request.RollBack:
    properties:
      deleteTable:
        description: Whether to delete the table
        type: boolean
      id:
        description: primary key ID
        type: integer
    type: object
  request.SearchApiParams:
    properties:
      ID:
        description: primary key ID
        type: integer
      apiGroup:
        description: api group
        type: string
      createdAt:
        description: creation time
        type: string
      desc:
        description: Sorting method: ascending false (default) | descending true
        type: boolean
      description:
        description: api Chinese description
        type: string
      keyword:
        description: keyword
        type: string
      method:
        description: Method: Create POST (default) | View GET | Update PUT | Delete DELETE
        type: string
      orderKey:
        description: sort
        type: string
      page:
        description: page number
        type: integer
      pageSize:
        description: size per page
        type: integer
      path:
        description: api path
        type: string
      updatedAt:
        description: update time
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: role ID
        type: integer
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: role ID
        items:
          type: integer
        type: array
      id:
        type: integer
    type: object
  request.SysAuthorityBtnReq:
    properties:
      authorityId:
        type: integer
      menuID:
        type: integer
      selected:
        items:
          type: integer
        type: array
    type: object
  request.SysAutoHistory:
    properties:
      keyword:
        description: keyword
        type: string
      page:
        description: page number
        type: integer
      pageSize:
        description: size per page
        type: integer
    type: object
  response.Email:
    properties:
      body:
        description: email content
        type: string
      subject:
        description: email title
        type: string
      to:
        description: Who to send the email to
        type: string
    type: object
  response.ExaCustomerResponse:
    properties:
      customer:
        $ref: '#/definitions/example.ExaCustomer'
    type: object
  response.ExaFileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFileUploadAndDownload'
    type: object
  response.FilePathResponse:
    properties:
      filePath:
        type: string
    type: object
  response.FileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFile'
    type: object
  response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  response.PageResult:
    properties:
      list: {}
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.PolicyPathResponse:
    properties:
      paths:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  response.SysAPIListResponse:
    properties:
      apis:
        items:
          $ref: '#/definitions/system.SysApi'
        type: array
    type: object
  response.SysAPIResponse:
    properties:
      api:
        $ref: '#/definitions/system.SysApi'
    type: object
  response.SysAuthorityBtnRes:
    properties:
      selected:
        items:
          type: integer
        type: array
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
      oldAuthorityId:
        description: old role ID
        type: integer
    type: object
  response.SysAuthorityResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
    type: object
  response.SysBaseMenuResponse:
    properties:
      menu:
        $ref: '#/definitions/system.SysBaseMenu'
    type: object
  response.SysBaseMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      openCaptcha:
        type: boolean
      picPath:
        type: string
    type: object
  response.SysConfigResponse:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
  response.SysMenusResponse:
    properties:
      menus:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
    type: object
  response.SysUserResponse:
    properties:
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  system.AutoCodeStruct:
    properties:
      abbreviation:
        description: Struct abbreviation
        type: string
      autoCreateApiToSql:
        description: Whether to automatically create an api
        type: boolean
      autoCreateResource:
        description: Whether to automatically create resource identifiers
        type: boolean
      autoMoveFile:
        description: Whether to automatically move files
        type: boolean
      businessDB:
        description: business database
        type: string
      description:
        description: Struct Chinese name
        type: string
      fields:
        items:
          $ref: '#/definitions/system.Field'
        type: array
      hasTimer:
        type: boolean
      humpPackageName:
        description: go file name
        type: string
      package:
        type: string
      packageName:
        description: file name
        type: string
      structName:
        description: Struct name
        type: string
      tableName:
        description: table name
        type: string
    type: object
  system.Field:
    properties:
      clearable:
        description: Whether it can be cleared
        type: boolean
      columnName:
        description: database field
        type: string
      comment:
        description: database field description
        type: string
      dataTypeLong:
        description: database field length
        type: string
      dictType:
        description: dictionary
        type: string
      errorText:
        description: Verification failure text
        type: string
      fieldDesc:
        description: Chinese name
        type: string
      fieldJson:
        description: FieldJson
        type: string
      fieldName:
        description: Field name
        type: string
      fieldSearchType:
        description: search criteria
        type: string
      fieldType:
        description: Field data type
        type: string
      require:
        description: Is it required?
        type: boolean
      sort:
        description: Whether to increase sorting
        type: boolean
    type: object
  system.Meta:
    properties:
      activeName:
        type: string
      closeTab:
        description: Automatically close tab
        type: boolean
      defaultMenu:
        description: Whether it is a basic route (under development)
        type: boolean
      icon:
        description: menu icon
        type: string
      keepAlive:
        description: Whether to cache
        type: boolean
      title:
        description: menu name
        type: string
    type: object
  system.SysApi:
    properties:
      ID:
        description: primary key ID
        type: integer
      apiGroup:
        description: api group
        type: string
      createdAt:
        description: creation time
        type: string
      description:
        description: api Chinese description
        type: string
      method:
        description: Method: Create POST (default) | View GET | Update PUT | Delete DELETE
        type: string
      path:
        description: api path
        type: string
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: role ID
        type: integer
      authorityName:
        description: character name
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: creation time
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: Default menu (default dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: Parent role ID
        type: integer
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysAutoCode:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      desc:
        type: string
      label:
        type: string
      packageName:
        type: string
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      ID:
        description: primary key ID
        type: integer
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      component:
        description: Corresponding front-end file path
        type: string
      createdAt:
        description: creation time
        type: string
      hidden:
        description: Whether to hide in the list
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      meta:
        allOf:
        - $ref: '#/definitions/system.Meta'
        description: additional attributes
      name:
        description: route name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: Parent menu ID
        type: string
      path:
        description: routing path
        type: string
      sort:
        description: sorting mark
        type: integer
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysBaseMenuBtn:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      desc:
        type: string
      name:
        type: string
      sysBaseMenuID:
        type: integer
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      key:
        description: The key that carries parameters in the address bar
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: Whether the parameters carried in the address bar are params or query
        type: string
      updatedAt:
        description: update time
        type: string
      value:
        description: The value of the parameter carried in the address bar
        type: string
    type: object
  system.SysDictionary:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      desc:
        description: description
        type: string
      name:
        description: dictionary name (medium)
        type: string
      status:
        description: status
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/system.SysDictionaryDetail'
        type: array
      type:
        description: Dictionary name (English)
        type: string
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysDictionaryDetail:
    properties:
      ID:
        description: primary key ID
        type: integer
      createdAt:
        description: creation time
        type: string
      extend:
        description: extended value
        type: string
      label:
        description: display value
        type: string
      sort:
        description: sorting mark
        type: integer
      status:
        description: enabled status
        type: boolean
      sysDictionaryID:
        description: associated tag
        type: integer
      updatedAt:
        description: update time
        type: string
      value:
        description: dictionary value
        type: integer
    type: object
  system.SysMenu:
    properties:
      ID:
        description: primary key ID
        type: integer
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      btns:
        additionalProperties:
          type: integer
        type: object
      children:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
      component:
        description: Corresponding front-end file path
        type: string
      createdAt:
        description: creation time
        type: string
      hidden:
        description: Whether to hide in the list
        type: boolean
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      menuId:
        type: string
      meta:
        allOf:
        - $ref: '#/definitions/system.Meta'
        description: additional attributes
      name:
        description: route name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: Parent menu ID
        type: string
      path:
        description: routing path
        type: string
      sort:
        description: sorting mark
        type: integer
      updatedAt:
        description: update time
        type: string
    type: object
  system.SysOperationRecord:
    properties:
      ID:
        description: primary key ID
        type: integer
      agent:
        description: agent
        type: string
      body:
        description: Request Body
        type: string
      createdAt:
        description: creation time
        type: string
      error_message:
        description: error message
        type: string
      ip:
        description: request ip
        type: string
      latency:
        description: delay
        type: string
      method:
        description: request method
        type: string
      path:
        description: request path
        type: string
      resp:
        description: Response Body
        type: string
      status:
        description: request status
        type: integer
      updatedAt:
        description: update time
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        description: userid
        type: integer
    type: object
  system.SysUser:
    properties:
      ID:
        description: primary key ID
        type: integer
      activeColor:
        description: active color
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: User role ID
        type: integer
      baseColor:
        description: base color
        type: string
      createdAt:
        description: creation time
        type: string
      email:
        description: user email
        type: string
      enable:
        description: Whether the user is frozen 1 normal 2 frozen
        type: integer
      headerImg:
        description: User avatar
        type: string
      nickName:
        description: user nickname
        type: string
      phone:
        description: User mobile phone number
        type: string
      sideMode:
        description: User side theme
        type: string
      updatedAt:
        description: update time
        type: string
      userName:
        description: user login name
        type: string
      uuid:
        description: userUUID
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
  description: A full-stack development basic platform using gin+vue for extremely fast development
  title: Gin-Vue-Admin Swagger API Interface Documentation
  version: v2.5.9
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api path, api Chinese description, api group, method
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: Create a basic API
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a basic API
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: delete api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: Delete selected API
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete selected API
      tags:
      - SysApi
  /api/freshCasbin:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Refresh successful
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: refresh casbin cache
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get all APIs without pagination, return a list including APIs
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIListResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all APIs without pagination
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: Get api based on id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: Get api based on id, return including api details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAPIResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get api based on id
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: Get the API list in pages
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: Get the API list in paging, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the API list in pages
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api path, api Chinese description, api group, method
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: Modify the basic API
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Modify the basic API
      tags:
      - SysApi
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: old role id, new permission id, new permission name, new parent role id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: Copy the role and return the system role details.
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: copy character
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: permission id, permission name, parent role id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: Create a role and return system role details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a role
      tags:
      - Authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: Delete role
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: Delete role
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete role
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: page number, size of each page
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Get the role list in paging, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the role list in paging
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: Set role resource permissions
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: Set role resource permissions
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set role resource permissions
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: permission id, permission name, parent role id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: Update role information, return including system role details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update role information
      tags:
      - Authority
  /authorityBtn/canRemoveAuthorityBtn:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Deletion successful
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set permission button
      tags:
      - AuthorityBtn
  /authorityBtn/getAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: menu id, role id, selected button id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: Return list successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityBtnRes'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get permission button
      tags:
      - AuthorityBtn
  /authorityBtn/setAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: menu id, role id, selected button id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: Return list successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set permission button
      tags:
      - AuthorityBtn
  /autoCode/createPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: Package created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create package
      tags:
      - AutoCode
  /autoCode/createPlug:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create plug-in template
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: Plug-in template created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create plug-in template
      tags:
      - AutoCode
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create automatic code
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"Created successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: automatic code template
      tags:
      - AutoCode
  /autoCode/delPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: Package deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete package
      tags:
      - AutoCode
  /autoCode/delSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: Delete rollback records
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete rollback records
      tags:
      - AutoCode
  /autoCode/getColumn:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get all fields of the current table
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all fields of the current table
      tags:
      - AutoCode
  /autoCode/getDatabase:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get all current databases
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all current databases
      tags:
      - AutoCode
  /autoCode/getMeta:
    post:
      consumes:
      - application/json
      parameters:
      - description: request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: Get meta information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get meta information
      tags:
      - AutoCode
  /autoCode/getPackage:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Package created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: get package
      tags:
      - AutoCode
  /autoCode/getSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAutoHistory'
      produces:
      - application/json
      responses:
        "200":
          description: Query the rollback record and return the list, total number, page number, and number of each page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Query rollback records
      tags:
      - AutoCode
  /autoCode/getTables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get all tables of the current database
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all tables of the current database
      tags:
      - AutoCode
  /autoCode/installPlugin:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: this is a test file
        in: formData
        name: plug
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Plug-in installed successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    type: object
                  type: array
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Install plug-in
      tags:
      - AutoCode
  /autoCode/preview:
    post:
      consumes:
      - application/json
      parameters:
      - description: Preview creation code
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: Preview the created code
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Preview the created code
      tags:
      - AutoCode
  /autoCode/pubPlug:
    get:
      consumes:
      - application/json
      parameters:
      - description: packaged plug-in
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: Plug-in packaged successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: packaged plug-in
      tags:
      - AutoCode
  /autoCode/rollback:
    post:
      consumes:
      - application/json
      parameters:
      - description: request parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RollBack'
      produces:
      - application/json
      responses:
        "200":
          description: Rollback automatically generated code
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Rollback automatically generated code
      tags:
      - AutoCode
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Generate verification code, return including random number id, base64, verification code length, whether to enable verification code
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Generate verification code
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: username, password, verification code
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Returns user information, token, expiration time
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
                msg:
                  type: string
              type: object
      summary: User login
      tags:
      - Base
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      parameters:
      - description: permission id, permission model list
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: Update role api permissions
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update role api permissions
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: permission id, permission model list
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: Get the permission list and return the list including casbin details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PolicyPathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the permission list
      tags:
      - Casbin
  /customer/customer:
    delete:
      consumes:
      - application/json
      parameters:
      - description: customer ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: Delete customer
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete customer
      tags:
      - ExaCustomer
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: customer name
        in: query
        name: customerName
        type: string
      - description: customer mobile phone number
        in: query
        name: customerPhoneData
        type: string
      - description: Management role ID
        in: query
        name: sysUserAuthorityID
        type: integer
      - description: Management ID
        in: query
        name: sysUserId
        type: integer
      - description: update time
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Obtain single customer information and return customer details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaCustomerResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get single customer information
      tags:
      - ExaCustomer
    post:
      consumes:
      - application/json
      parameters:
      - description: customer username, customer mobile phone number
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: Create a customer
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a customer
      tags:
      - ExaCustomer
    put:
      consumes:
      - application/json
      parameters:
      - description: customer ID, customer information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: Update customer information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update customer information
      tags:
      - ExaCustomer
  /customer/customerList:
    get:
      consumes:
      - application/json
      parameters:
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: size per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get the list of authorized customers in paging, and return the list, total number, page number, and quantity per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the list of authorized customers in paging
      tags:
      - ExaCustomer
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"Sent successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Send test email
      tags:
      - System
  /email/sendEmail:
    post:
      parameters:
      - description: necessary parameters for sending emails
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.Email'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"Sent successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: send email
      tags:
      - System
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, breakpoint resume example
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Resume transfer to server from breakpoint
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Resume transmission to server from breakpoint
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: Just pass in the id in the file
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: delete file
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete files
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: File upload completed
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Create a file, return including the file path
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FilePathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create file
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: page number, size of each page
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Paging file list, returns include list, total number, page number, number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: paging file list
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Delete cache tiles
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: delete slice
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete slice
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Example of uploading file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Upload file example, return including file details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaFileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Example of uploading files
      tags:
      - ExaFileUploadAndDownload
  /init/checkdb:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Initialize user database
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: Initialize user database
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: Initialization database parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: Initialize user database
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Initialize user database
      tags:
      - InitDB
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: jwt added to blacklist
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: jwt added to blacklist
      tags:
      - Jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: routing path, parent menu ID, routing name, corresponding front-end file path, sorting mark
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: New menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: New menu
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: role ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Add the relationship between menu and role
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Increase the relationship between menu and role
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: menu id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: delete menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete menu
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: menu id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: Get the menu based on id and return the system menu list
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenuResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get menu based on id
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: empty
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: Get the user's dynamic route and return the system menu list
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user dynamic routing
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: empty
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: Get user dynamic routing and return a list including system menu details
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysMenusResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user dynamic routing
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: role ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: Get the specified role menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the specified role menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: page number, size of each page
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Get the basic menu list in paging, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the basic menu list by pagination
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: routing path, parent menu ID, routing name, corresponding front-end file path, sorting mark
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: update menu
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: update menu
      tags:
      - Menu
  /sysDictionary/createSysDictionary:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: Create SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/deleteSysDictionary:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: Delete SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/findSysDictionary:
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: description
        in: query
        name: desc
        type: string
      - description: dictionary name (medium)
        in: query
        name: name
        type: string
      - description: status
        in: query
        name: status
        type: boolean
      - description: dictionary name (English)
        in: query
        name: type
        type: string
      - description: update time
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Query SysDictionary with id
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Query SysDictionary using id
      tags:
      - SysDictionary
  /sysDictionary/getSysDictionaryList:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get the SysDictionary list in paging, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the SysDictionary list in pages
      tags:
      - SysDictionary
  /sysDictionary/updateSysDictionary:
    put:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: Update SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update SysDictionary
      tags:
      - SysDictionary
  /sysDictionaryDetail/createSysDictionaryDetail:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: Create SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/deleteSysDictionaryDetail:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: Delete SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/findSysDictionaryDetail:
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: extended value
        in: query
        name: extend
        type: string
      - description: display value
        in: query
        name: label
        type: string
      - description: sorting mark
        in: query
        name: sort
        type: integer
      - description: enabled status
        in: query
        name: status
        type: boolean
      - description: associated tag
        in: query
        name: sysDictionaryID
        type: integer
      - description: update time
        in: query
        name: updatedAt
        type: string
      - description: dictionary value
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Query SysDictionaryDetail with id
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Query SysDictionaryDetail using id
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/getSysDictionaryDetailList:
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: extended value
        in: query
        name: extend
        type: string
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: display value
        in: query
        name: label
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: size per page
        in: query
        name: pageSize
        type: integer
      - description: sorting mark
        in: query
        name: sort
        type: integer
      - description: enabled status
        in: query
        name: status
        type: boolean
      - description: associated tag
        in: query
        name: sysDictionaryID
        type: integer
      - description: update time
        in: query
        name: updatedAt
        type: string
      - description: dictionary value
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get the SysDictionaryDetail list in pages, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the SysDictionaryDetail list in pages
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/updateSysDictionaryDetail:
    put:
      consumes:
      - application/json
      parameters:
      - description: Update SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: Update SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: Create SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord model
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: Delete SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete SysOperationRecord in batches
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: Delete SysOperationRecord in batches
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete SysOperationRecord in batches
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord:
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: agent
        in: query
        name: agent
        type: string
      - description: Request Body
        in: query
        name: body
        type: string
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: error message
        in: query
        name: error_message
        type: string
      - description: request ip
        in: query
        name: ip
        type: string
      - description: delay
        in: query
        name: latency
        type: string
      - description: request method
        in: query
        name: method
        type: string
      - description: request path
        in: query
        name: path
        type: string
      - description: Response Body
        in: query
        name: resp
        type: string
      - description: request status
        in: query
        name: status
        type: integer
      - description: update time
        in: query
        name: updatedAt
        type: string
      - description: user id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Query SysOperationRecord with id
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Query SysOperationRecord using id
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: primary key ID
        in: query
        name: ID
        type: integer
      - description: agent
        in: query
        name: agent
        type: string
      - description: Request Body
        in: query
        name: body
        type: string
      - description: creation time
        in: query
        name: createdAt
        type: string
      - description: error message
        in: query
        name: error_message
        type: string
      - description: request ip
        in: query
        name: ip
        type: string
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: delay
        in: query
        name: latency
        type: string
      - description: request method
        in: query
        name: method
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: size per page
        in: query
        name: pageSize
        type: integer
      - description: request path
        in: query
        name: path
        type: string
      - description: Response Body
        in: query
        name: resp
        type: string
      - description: request status
        in: query
        name: status
        type: integer
      - description: update time
        in: query
        name: updatedAt
        type: string
      - description: user id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Get the SysOperationRecord list in paging, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the SysOperationRecord list in pages
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Get server information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get server information
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Get the content of the configuration file and return the system configuration.
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysConfigResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the configuration file content
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: Restart the system
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Restart the system
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: Set configuration file content
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: Set configuration file content
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set configuration file content
      tags:
      - System
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, username, nickname, avatar link
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: Set user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set user information
      tags:
      - SysUser
  /user/admin_register:
    post:
      parameters:
      - description: username, nickname, password, role ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: User registered account, returns including user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysUserResponse'
                msg:
                  type: string
              type: object
      summary: User registration account
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: username, original password, new password
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: User changes password
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: User changes password
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: delete user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: delete user
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Get user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user information
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: page number, size of each page
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Get the user list in pages, and return the list, total number, page number, and number per page
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get the user list in pages
      tags:
      - SysUser
  /user/resetPassword:
    post:
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: Reset user password
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Reset user password
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: user UUID, role ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: Set user permissions
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set user permissions
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: user UUID, role ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: Set user permissions
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Change user permissions
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, username, nickname, avatar link
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: Set user information
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Set user information
      tags:
      - SysUser
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
